package {{:package}};

/* THIS FILE WAS GENERATED BY THE 'generate-entity' tool.
 * DO NOT CHANGE ANYTHING HERE! CHANGE THE TEMPLATES INSTEAD! 
 */

import blueprint.entities.connection.*; 
 
class {{:entityName}} 
	extends {{:extends}}
	implements {{:entityName}}Configuration
	{{props implements}}implements {{:key}}{{if prop.length}}<{{for prop}}{{#data}}{{/for}}>{{/if}}
	{{/props}}
{
	/* VARIABLES */
{{for variables}}
	private var _{{:name}}: {{:type}}{{if value || value == 0}} = {{:value}}{{/if}};
{{/for }}
	/* CONSTRUCTOR  */
	private function new(template: {{:entityName}}Template) 
	{
		super();
		{{for variables}}{{if configurable}}
		this._{{:name}} = template.get{{:name.capitalize()}}();
		{{/if}}{{/for}}
	}	
	/* GETTERS */
{{for variables}}{{if mutable || configurable}}
	public function get{{:name.capitalize()}}(): {{:type}} { return this._{{:name}}; }
{{/if}}{{/for}}	
{{if implements.ConnectableSource}}
	/* INTERFACE ConnectableSource */
	private var _outgoingConnections: Array<Connection> = new Array<Connection>();
	public function getOutgoingConnections(): Array<Connection> { return _outgoingConnections; }
	public function connectAsSource(connection: Connection) { _outgoingConnections.push(connection); }
{{/if}}
{{if implements.ConnectableDestination}}
	/* INTERFACE ConnectableDestination */
	private var _ingoingConnections: Array<Connection> = new Array<Connection>();
	public function getIngoingConnections(): Array<Connection> { return _ingoingConnections; }
	public function connectAsDestination(connection: Connection) { _ingoingConnections.push(connection); }
{{/if}}
}