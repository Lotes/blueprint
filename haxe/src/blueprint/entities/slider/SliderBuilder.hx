package blueprint.entities.slider;

/* THIS FILE WAS GENERATED BY THE 'generate-entity' tool.
 * DO NOT CHANGE ANYTHING HERE! CHANGE THE TEMPLATES INSTEAD!
 */

import blueprint.entities.Builder;
import blueprint.entities.instance.ModuleInstanceBuilder;
import blueprint.entities.TemplateBuilder;
import blueprint.Error;

class SliderBuilder
	implements SliderConfigurator<SliderBuilder>
	implements NameConfigurator<SliderBuilder>
	implements Builder<Slider>
	implements TemplateBuilder<SliderTemplate>
{
	/* VARIABLES */
	private var _moduleInstanceBuilder: ModuleInstanceBuilder;
	private var _finished: Bool = false;
	private var _name: String = null;
	
	private var _minimum: Float;
	
	private var _maximum: Float;
	
	private var _position: Float;
	

	/* CONSTRUCTOR */
	public function new(instanceBuilder: ModuleInstanceBuilder, template: SliderTemplate)
	{
		this._moduleBuilder = moduleBuilder;
		
		this._minimum = template.getMinimum();
		
		this._maximum = template.getMaximum();
		
		this._position = template.getPosition();
		
	}

	/* INTERFACE Builder<Slider> */
	public function build(): Slider
	{
		if (this._finished)
			throw new Error("Slider was already built!");
		var entity = new Slider(template());
		_moduleBuilder.add(entity);
		if(this._name != null)
			_moduleBuilder.alias(name, entity);
		this._finished = true;
		return entity;
	}

	/* INTERFACE TemplateBuilder<Slider> */
	public function template(): SliderTemplate
	{
		var result = new SliderTemplate();
		
		result.minimum(this._minimum);
		
		result.maximum(this._maximum);
		
		result.position(this._position);
		
		return result;
	}

	/* INTERFACE SliderConfigurator<SliderBuilder> */
	
	public function minimum(value: Float): SliderBuilder
	{
		this._minimum = value;
		return this;
	}
	
	public function maximum(value: Float): SliderBuilder
	{
		this._maximum = value;
		return this;
	}
	
	public function position(value: Float): SliderBuilder
	{
		this._position = value;
		return this;
	}
	

	/* INTERFACE NameConfigurator<SliderBuilder> */
	public function name(name:String): SliderBuilder
	{
		this._name = name;
		return this;
	}
}
