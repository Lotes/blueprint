package blueprint.entities.neuron;

/* THIS FILE WAS GENERATED BY THE 'generate-entity' tool.
 * DO NOT CHANGE ANYTHING HERE! CHANGE THE TEMPLATES INSTEAD!
 */

import blueprint.entities.Builder;
import blueprint.entities.instance.IModuleInstanceCreator;
import blueprint.entities.TemplateBuilder;
import blueprint.Error;

class NeuronBuilder
	implements NeuronConfigurator<NeuronBuilder>
	implements NameConfigurator<NeuronBuilder>
	implements Builder<Neuron>
	implements TemplateBuilder<NeuronTemplate>
{
	/* VARIABLES */
	private var _moduleInstanceBuilder: IModuleInstanceCreator;
	private var _finished: Bool = false;
	private var _name: String = null;
	
	private var _threshold: Float;
	
	private var _maximum: Float;
	
	private var _factor: Float;
	

	/* CONSTRUCTOR */
	public function new(instanceBuilder: IModuleInstanceCreator, template: NeuronTemplate)
	{
		this._moduleInstanceBuilder = instanceBuilder;
		
		this._threshold = template.getThreshold();
		
		this._maximum = template.getMaximum();
		
		this._factor = template.getFactor();
		
	}

	/* INTERFACE Builder<Neuron> */
	public function build(): Neuron
	{
		if (this._finished)
			throw new Error("Neuron was already built!");
		var entity = new MutableNeuron(template());
		_moduleInstanceBuilder.add(entity);
		if(this._name != null)
			_moduleInstanceBuilder.alias(this._name, entity);
		this._finished = true;
		return entity;
	}

	/* INTERFACE TemplateBuilder<Neuron> */
	public function template(): NeuronTemplate
	{
		var result = new NeuronTemplate();
		
		result.threshold(this._threshold);
		
		result.maximum(this._maximum);
		
		result.factor(this._factor);
		
		return result;
	}

	/* INTERFACE NeuronConfigurator<NeuronBuilder> */
	
	public function threshold(value: Float): NeuronBuilder
	{
		this._threshold = value;
		return this;
	}
	
	public function maximum(value: Float): NeuronBuilder
	{
		this._maximum = value;
		return this;
	}
	
	public function factor(value: Float): NeuronBuilder
	{
		this._factor = value;
		return this;
	}
	

	/* INTERFACE NameConfigurator<NeuronBuilder> */
	public function name(name:String): NeuronBuilder
	{
		this._name = name;
		return this;
	}
}
